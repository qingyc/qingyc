{"meta":{"title":"青同学","subtitle":"啦啦啦啦啦","description":"no description","author":"青同学","url":"http://qingyc.github.io","root":"/"},"pages":[{"title":"About","date":"2019-07-20T09:35:39.000Z","updated":"2019-07-20T17:00:31.252Z","comments":true,"path":"about/index.html","permalink":"http://qingyc.github.io/about/index.html","excerpt":"","text":"Github 简书"},{"title":"Categories","date":"2019-07-20T09:33:42.000Z","updated":"2019-07-20T16:59:43.842Z","comments":true,"path":"categories/index.html","permalink":"http://qingyc.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2019-07-20T09:35:22.000Z","updated":"2019-07-20T16:59:43.837Z","comments":true,"path":"tags/index.html","permalink":"http://qingyc.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"PorterDuffXfermode的一些使用问题","slug":"PorterDuffXfermode的一些使用问题","date":"2019-07-28T05:39:56.000Z","updated":"2019-07-28T05:57:03.113Z","comments":true,"path":"2019/07/28/PorterDuffXfermode的一些使用问题/","link":"","permalink":"http://qingyc.github.io/2019/07/28/PorterDuffXfermode的一些使用问题/","excerpt":"","text":"PorterDuffXfermode的一些使用问题一 PorterDuff.Mode使用问题1.1 PorterDuff.Mode.CLEAR 正常效果 targetSdkVersion 28 1.2 PorterDuff.ModePorterDuff.Mode 官方效果https://developer.android.com/reference/android/graphics/PorterDuff.Mode.html 1.2 PorterDuffXfermode 在Android 27 和 28 的实际效果 PorterDuffXfermode_27 PorterDuffXfermode_28 图片来源 二 绘制2时 canvas 画布不同导致的问题after change another canvas ,PorterDuffXfermode(PorterDuff.Mode.CLEAR) is not work 创建 另一个 画布 123//保存没有背景的截图screenShotBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)mScreenShotCanvas = Canvas(screenShotBitmap) dispatchDraw12345678910111213141516171819202122 override fun dispatchDraw(canvas: Canvas?) &#123; ... //7.绘制蒙版 drawMask(canvas) .... //截图 mScreenShotCanvas?.let &#123; canvas -&gt; ... //7.绘制蒙版 drawMask(canvas, true) ... &#125;... &#125; 问题 传入的canvas 不同 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364/** * 绘制蒙版 * */private fun drawMask(canvas: Canvas, shotScreen: Boolean = false) &#123; try &#123;//qtip rl_frame_content -&gt; 相框外层容器 rl_frame_content?.let &#123; //先获取相框外层容器的位置 val rlLeft = it.left val rlTop = it.top mGpuIV?.let &#123; gpuIv -&gt; mMaskBitmap?.let &#123; mask -&gt; //获取相片和相框外侧之间的位置关系 val gpuIvLeft = rl_gpu_iv_content_trim.left val gpuIvTop = rl_gpu_iv_content_trim.top val gpuIvWidth = rl_gpu_iv_content_trim.width val gpuIvHeight = rl_gpu_iv_content_trim.height val newWidth = gpuIvWidth - 2 * mMaskMargin val newHeight = gpuIvHeight - 2 * mMaskMargin //缩放后的蒙版(根据图片的大小调整蒙版大小) if (mScaledMaskBitmap == null) &#123; mScaledMaskBitmap = BitmapUtils.scaleBitmapInMaxWidthOrHeight(mask, newWidth, newHeight) &#125; mScaledMaskBitmap?.let &#123; scaleMask -&gt; //绘制mask val left = rlLeft.toFloat() + gpuIvLeft val top = rlTop.toFloat() + gpuIvTop //1.离屏画布 val save = canvas.saveLayer(left, top, left + gpuIvWidth, top + gpuIvHeight, null, Canvas.ALL_SAVE_FLAG) //2.绘制带颜色蒙版 创建大小和 rl_frame_content 一样的蒙版 val dstBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888) //创建蒙版画布 val dstCav = Canvas(dstBitmap) //蒙版颜色 dstCav.drawColor(mMaskColor) canvas.drawBitmap(dstBitmap, left, top, null) //3.蒙版掏空出透明形状区域 val paintMask = Paint() paintMask.isAntiAlias = true paintMask.xfermode = PorterDuffXfermode(PorterDuff.Mode.CLEAR) //蒙版位置居中 canvas.drawBitmap(scaleMask, left + (gpuIvWidth - scaleMask.width) / 2, top + (gpuIvHeight - scaleMask.height) / 2, paintMask) //4.画布恢复 canvas.restoreToCount(save) &#125; &#125; &#125; &#125; &#125; catch (e: Exception) &#123; QLogger.e(e) &#125;&#125; 需要的效果 截图时实际效果 并不是 paintMask.xfermode = PorterDuffXfermode(PorterDuff.Mode.CLEAR)无效 而是 clear的区域不是 图片的非透明区而是 整个图片 解决问题 // QTIP: 2019-07-23 修改 1PorterDuff.Mode.CLEAR 为 PorterDuff.Mode.DST_OUT 或者 PorterDuff.Mode.XOR 待解决疑问 : Android api 28 以下 传入有bitmap的canvas 绘制时 PorterDuff.Mode.CLEAR 无效 参考https://stackoverflow.com/questions/51538443/xfermode-in-android-p-beta?noredirect=1#comment90044905_51538443 https://stackoverflow.com/questions/10494442/android-paint-porterduff-mode-clear?rq=1 https://issuetracker.google.com/issues/111819103 https://stackoverflow.com/questions/56189189/android-in-android-pie-api-28-radialgradient-draws-a-rectangle-instead-of-a?rq=1 https://android.googlesource.com/platform/development/+/master/samples/ApiDemos/src/com/example/android/apis/graphics/Xfermodes.java 关联下 ViewOutlineProvider 12345/** * Interface by which a View builds its &#123;@link Outline&#125;, used for shadow casting and clipping. */public abstract class ViewOutlineProvider &#123;...","categories":[],"tags":[]},{"title":"开始整理下吧 ...","slug":"HelloWorld","date":"2019-07-20T17:01:10.000Z","updated":"2019-07-20T17:10:22.816Z","comments":true,"path":"2019/07/21/HelloWorld/","link":"","permalink":"http://qingyc.github.io/2019/07/21/HelloWorld/","excerpt":"","text":"开始整理下吧 啦啦啦…..","categories":[{"name":"qing","slug":"qing","permalink":"http://qingyc.github.io/categories/qing/"}],"tags":[]},{"title":"hexo-github-pages","slug":"hexo-github-pages","date":"2019-07-20T09:17:53.000Z","updated":"2019-07-20T16:57:35.557Z","comments":true,"path":"2019/07/20/hexo-github-pages/","link":"","permalink":"http://qingyc.github.io/2019/07/20/hexo-github-pages/","excerpt":"","text":"Hexo + github pages 搭建个人博客一 Hexo啥是 Hexo Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 官方文档 https://hexo.io/zh-cn/docs/setup 1.1 安装前提 先安装Node.js (Should be at least nodejs 6.9) Git 安装1npm install -g hexo-cli 1.2 使用 初始化 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 生成静态文件 1hexo g 运行 1hexo s 部署 1hexo deploy 详细部署说明 2 Github Pageshttps://pages.github.com/ 自定义域名 先安装插件 1npm install hexo-deployer-git --save 2.1 问题记录1234and the repository exists.FATAL Something&apos;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlError: Spawn failed at ChildProcess.&lt;anonymous&gt; (/Users/xxx/GIT_HEXO_W/xxx.github.io/node_modules/hexo-util/lib/spawn.js:52:19) 解决生成ssh key 添加ssh key Linkhttps://hexo.io/zh-cn/docs/ Hexo 博客搭建指南 手把手教你使用Hexo + Github Pages搭建个人独立博客","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://qingyc.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://qingyc.github.io/tags/Hexo/"}]}]}